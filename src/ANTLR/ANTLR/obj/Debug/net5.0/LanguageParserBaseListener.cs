//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Artis\source\repos\ANTLR\ANTLR\LanguageParser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ANTLR {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ILanguageParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class LanguageParserBaseListener : ILanguageParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCode([NotNull] LanguageParser.CodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCode([NotNull] LanguageParser.CodeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.webMemoryClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWebMemoryClass([NotNull] LanguageParser.WebMemoryClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.webMemoryClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWebMemoryClass([NotNull] LanguageParser.WebMemoryClassContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.superClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSuperClass([NotNull] LanguageParser.SuperClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.superClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSuperClass([NotNull] LanguageParser.SuperClassContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassBody([NotNull] LanguageParser.ClassBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassBody([NotNull] LanguageParser.ClassBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.classType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassType([NotNull] LanguageParser.ClassTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.classType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassType([NotNull] LanguageParser.ClassTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.className"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassName([NotNull] LanguageParser.ClassNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.className"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassName([NotNull] LanguageParser.ClassNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.superClassName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSuperClassName([NotNull] LanguageParser.SuperClassNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.superClassName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSuperClassName([NotNull] LanguageParser.SuperClassNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod([NotNull] LanguageParser.MethodContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod([NotNull] LanguageParser.MethodContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.url"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUrl([NotNull] LanguageParser.UrlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.url"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUrl([NotNull] LanguageParser.UrlContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.urlDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUrlDefinition([NotNull] LanguageParser.UrlDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.urlDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUrlDefinition([NotNull] LanguageParser.UrlDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.urlType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUrlType([NotNull] LanguageParser.UrlTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.urlType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUrlType([NotNull] LanguageParser.UrlTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.protocolName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProtocolName([NotNull] LanguageParser.ProtocolNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.protocolName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProtocolName([NotNull] LanguageParser.ProtocolNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.location"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocation([NotNull] LanguageParser.LocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.location"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocation([NotNull] LanguageParser.LocationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.methodPath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodPath([NotNull] LanguageParser.MethodPathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.methodPath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodPath([NotNull] LanguageParser.MethodPathContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.methodAnnotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodAnnotation([NotNull] LanguageParser.MethodAnnotationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.methodAnnotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodAnnotation([NotNull] LanguageParser.MethodAnnotationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.annotationType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotationType([NotNull] LanguageParser.AnnotationTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.annotationType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotationType([NotNull] LanguageParser.AnnotationTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.annotationDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotationDefinition([NotNull] LanguageParser.AnnotationDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.annotationDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotationDefinition([NotNull] LanguageParser.AnnotationDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.methodDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDefinition([NotNull] LanguageParser.MethodDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.methodDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDefinition([NotNull] LanguageParser.MethodDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.methodProtection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodProtection([NotNull] LanguageParser.MethodProtectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.methodProtection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodProtection([NotNull] LanguageParser.MethodProtectionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.methodDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDataType([NotNull] LanguageParser.MethodDataTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.methodDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDataType([NotNull] LanguageParser.MethodDataTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.methodName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodName([NotNull] LanguageParser.MethodNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.methodName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodName([NotNull] LanguageParser.MethodNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArguments([NotNull] LanguageParser.ArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArguments([NotNull] LanguageParser.ArgumentsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] LanguageParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] LanguageParser.ArgumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.argumentDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentDataType([NotNull] LanguageParser.ArgumentDataTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.argumentDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentDataType([NotNull] LanguageParser.ArgumentDataTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.argumentName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentName([NotNull] LanguageParser.ArgumentNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.argumentName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentName([NotNull] LanguageParser.ArgumentNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] LanguageParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] LanguageParser.VariableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.variableProtection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableProtection([NotNull] LanguageParser.VariableProtectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.variableProtection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableProtection([NotNull] LanguageParser.VariableProtectionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.variableDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDataType([NotNull] LanguageParser.VariableDataTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.variableDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDataType([NotNull] LanguageParser.VariableDataTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.variableName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableName([NotNull] LanguageParser.VariableNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.variableName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableName([NotNull] LanguageParser.VariableNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.associations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssociations([NotNull] LanguageParser.AssociationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.associations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssociations([NotNull] LanguageParser.AssociationsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.associationType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssociationType([NotNull] LanguageParser.AssociationTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.associationType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssociationType([NotNull] LanguageParser.AssociationTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.associationSourceName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssociationSourceName([NotNull] LanguageParser.AssociationSourceNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.associationSourceName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssociationSourceName([NotNull] LanguageParser.AssociationSourceNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.associationTargetName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssociationTargetName([NotNull] LanguageParser.AssociationTargetNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.associationTargetName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssociationTargetName([NotNull] LanguageParser.AssociationTargetNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.sourceClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSourceClass([NotNull] LanguageParser.SourceClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.sourceClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSourceClass([NotNull] LanguageParser.SourceClassContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.targetClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTargetClass([NotNull] LanguageParser.TargetClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.targetClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTargetClass([NotNull] LanguageParser.TargetClassContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace ANTLR
