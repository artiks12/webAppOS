//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Artis\source\repos\ANTLR\ANTLR\LanguageParser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ANTLR {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LanguageParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ILanguageParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCode([NotNull] LanguageParser.CodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCode([NotNull] LanguageParser.CodeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.webMemoryClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWebMemoryClass([NotNull] LanguageParser.WebMemoryClassContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.webMemoryClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWebMemoryClass([NotNull] LanguageParser.WebMemoryClassContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.superClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSuperClass([NotNull] LanguageParser.SuperClassContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.superClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSuperClass([NotNull] LanguageParser.SuperClassContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBody([NotNull] LanguageParser.ClassBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBody([NotNull] LanguageParser.ClassBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassType([NotNull] LanguageParser.ClassTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassType([NotNull] LanguageParser.ClassTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.className"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassName([NotNull] LanguageParser.ClassNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.className"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassName([NotNull] LanguageParser.ClassNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.superClassName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSuperClassName([NotNull] LanguageParser.SuperClassNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.superClassName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSuperClassName([NotNull] LanguageParser.SuperClassNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.method"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod([NotNull] LanguageParser.MethodContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.method"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod([NotNull] LanguageParser.MethodContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.url"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUrl([NotNull] LanguageParser.UrlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.url"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUrl([NotNull] LanguageParser.UrlContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.urlDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUrlDefinition([NotNull] LanguageParser.UrlDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.urlDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUrlDefinition([NotNull] LanguageParser.UrlDefinitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.urlType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUrlType([NotNull] LanguageParser.UrlTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.urlType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUrlType([NotNull] LanguageParser.UrlTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.protocolName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProtocolName([NotNull] LanguageParser.ProtocolNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.protocolName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProtocolName([NotNull] LanguageParser.ProtocolNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.location"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocation([NotNull] LanguageParser.LocationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.location"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocation([NotNull] LanguageParser.LocationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.methodPath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodPath([NotNull] LanguageParser.MethodPathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.methodPath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodPath([NotNull] LanguageParser.MethodPathContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.methodAnnotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodAnnotation([NotNull] LanguageParser.MethodAnnotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.methodAnnotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodAnnotation([NotNull] LanguageParser.MethodAnnotationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.annotationType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationType([NotNull] LanguageParser.AnnotationTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.annotationType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationType([NotNull] LanguageParser.AnnotationTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.annotationDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationDefinition([NotNull] LanguageParser.AnnotationDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.annotationDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationDefinition([NotNull] LanguageParser.AnnotationDefinitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.methodDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDefinition([NotNull] LanguageParser.MethodDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.methodDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDefinition([NotNull] LanguageParser.MethodDefinitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.methodProtection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodProtection([NotNull] LanguageParser.MethodProtectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.methodProtection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodProtection([NotNull] LanguageParser.MethodProtectionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.methodDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDataType([NotNull] LanguageParser.MethodDataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.methodDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDataType([NotNull] LanguageParser.MethodDataTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.methodName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodName([NotNull] LanguageParser.MethodNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.methodName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodName([NotNull] LanguageParser.MethodNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] LanguageParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] LanguageParser.ArgumentsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] LanguageParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] LanguageParser.ArgumentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.argumentDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentDataType([NotNull] LanguageParser.ArgumentDataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.argumentDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentDataType([NotNull] LanguageParser.ArgumentDataTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.argumentName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentName([NotNull] LanguageParser.ArgumentNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.argumentName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentName([NotNull] LanguageParser.ArgumentNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] LanguageParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] LanguageParser.VariableContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.variableProtection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableProtection([NotNull] LanguageParser.VariableProtectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.variableProtection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableProtection([NotNull] LanguageParser.VariableProtectionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.variableDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDataType([NotNull] LanguageParser.VariableDataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.variableDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDataType([NotNull] LanguageParser.VariableDataTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.variableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableName([NotNull] LanguageParser.VariableNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.variableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableName([NotNull] LanguageParser.VariableNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.associations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociations([NotNull] LanguageParser.AssociationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.associations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociations([NotNull] LanguageParser.AssociationsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.associationType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociationType([NotNull] LanguageParser.AssociationTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.associationType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociationType([NotNull] LanguageParser.AssociationTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.associationSourceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociationSourceName([NotNull] LanguageParser.AssociationSourceNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.associationSourceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociationSourceName([NotNull] LanguageParser.AssociationSourceNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.associationTargetName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociationTargetName([NotNull] LanguageParser.AssociationTargetNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.associationTargetName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociationTargetName([NotNull] LanguageParser.AssociationTargetNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.sourceClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceClass([NotNull] LanguageParser.SourceClassContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.sourceClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceClass([NotNull] LanguageParser.SourceClassContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.targetClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTargetClass([NotNull] LanguageParser.TargetClassContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.targetClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTargetClass([NotNull] LanguageParser.TargetClassContext context);
}
} // namespace ANTLR
